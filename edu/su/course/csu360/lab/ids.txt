<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Documentation of Practicals</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.3/css/bootstrap.min.css" integrity="sha512-jnSuA4Ss2PkkikSOLtYs8BlYIeeIK1h99ty4YfvRPAlzr377vr3CXDb7sb7eEEBYjDtcYj+AjBH3FLv5uSJuXg==" crossorigin="anonymous" referrerpolicy="no-referrer" />

</head>
<body class="container">

<h1 class="text-center">Documentation of Practicals - Operating System</h1>
<h4 class="text-muted text-center">By Divya Mohan and Aarchit Joshi</h2>

<section>
    <h2>Practical 1: Setting up a Development Environment</h2>
    <p>Install VMware Workstation and install any Linux variant. OR Launch an EC2 instance with AmazonMachineLinux using Amazon EC2.</p>
    <p>No commands needed for VMware installation; follow the GUI steps. For EC2 instance:</p>
    <code>aws ec2 run-instances --image-id ami-0abcdef1234567890 --count 1 --instance-type t2.micro --key-name YourKeyName</code>
</section>

<section>
    <h2>Practical 2: Setting up the OS in virtual machine</h2>
    <p>Create the Virtual Machine and install the OS of your choice in the VMWare Workstation / VMBox.</p>
    <p>Boot it up and explore its features.</p> 
<section>
    <h2>Practical 3.1: File Management</h2>
    <ul>
        <li>Create a directory.</li>
	<li>In my case, I have switched to root directory -> then went to var -> created www then created html.</li>
    </ul>
    <code>mkdir www</code><br>
    <code>mkdir html</code>
<ul>
    <li>Than I have created an index.html that hosts all these contents you are reading here in comple basic html.</li>
</ul>
</section>

<section>
    <h2>Practical 3.2: Working with Files</h2>
    <p>Create a file "story.html" and edit it using your favorite Linux file editor (nano in this case). You are free to choose from any CLI text editor available. Then, change the permission using chmod.</p>
    <code>touch story.html</code><br>
    <code>nano story.html</code> <!-- Replace 'nano' with your preferred editor -->
    <br>
    <code>chmod 644 story.html</code>
</section>

<section>
    <h2>Practical 3.3: The Story</h2>
    <!-- Instructions to decorate the story are provided in the HTML content; ensure "story.html" is properly saved and accessible -->
    <iframe src="story.html" width="100%" height="450px"></iframe>
</section>

<section>
    <h2>Practical 4: User Management</h2>
    <p>Create a new user:</p>
    <code>sudo adduser testuser2</code><br>
    <code>echo testpassword | sudo passwd testuser2 --stdin</code> <!-- This command may vary based on the Linux distro -->
</section>

<section>
    <h2>Practical 5: Switching Users</h2>
    <p>Change to the new user and try to edit the file:</p>
    <code>su - testuser2</code><br>
    <code>nano story.html</code> <!-- Mention the permission issue -->
    <p>Since there is no permission to write, it is unwritable. Use 'sudo' or change permissions if necessary.</p>
</section>

<section>
    <h2>Practical 6: Memory Management</h2>
    <p>Read about Primary, Secondary, and Virtual memory. Below is a brief comparison:</p>
    <table class="table table-stripped">
        <tr>
            <th>Type</th>
            <th>Description</th>
            <th>Examples</th>
            <th>Usage</th>
        </tr>
        <tr>
            <td>Primary Memory</td>
            <td>Also known as main memory. It is fast and directly accessible by the CPU.</td>
            <td>RAM, ROM</td>
            <td>Storing currently executing programs and their data.</td>
        </tr>
        <tr>
            <td>Secondary Memory</td>
            <td>Non-volatile storage for data not currently in use. It is slower than primary memory.</td>
            <td>Hard drives, SSDs, USB drives</td>
            <td>Long-term data storage, archiving.</td>
        </tr>
        <tr>
            <td>Virtual Memory</td>
            <td>A memory management capability of an OS that uses hardware and software to allow a computer to compensate for physical memory shortages, by temporarily transferring data from RAM to disk storage.</td>
            <td>Portion of hard drive configured to emulate RAM</td>
            <td>Extending usable memory by using disk space to simulate additional RAM.</td>
        </tr>
    </table>
</section>

<section>
    <h2>Practical 7: Changing IP Adress</h2>
    <p>Get the IP Address from ifconfig</p>
	<p>Change the address to the next class of ip address using ifconfig</p>
    <code>sudo ifconfig hardwareID newIP netmask OLDsubnet</code><br>
	<p>If your current IP address is 172.23.23.32 and your subnet/netmask is 255.255.255.0 then run the following command</p>
    <code>sudo ifconfig eth0 192.0.0.122 netmask 255.255.255.0</code>
    <p>Since there is no permission to write, it is unwritable. Use 'sudo' or change permissions if necessary.</p>
</section>

<section>
    <h2>Practical 8: Install ssh</h2>
    <p>Get the IP Address from ifconfig</p>
	<p>Change the address to the next class of ip address using ifconfig</p>
    <code>sudo ifconfig hardwareID newIP netmask OLDsubnet</code><br>
	<p>If your current IP address is 172.23.23.32 and your subnet/netmask is 255.255.255.0 then run the following command</p>
    <code>sudo ifconfig eth0 192.0.0.122 netmask 255.255.255.0</code>
    <p>Since there is no permission to write, it is unwritable. Use 'sudo' or change permissions if necessary.</p>
</section>

<section>
    <h2>Practical 8: Setting Up SSH for Secure Communication</h2>
    <p>This practical guide walks you through installing SSH (Secure Shell), configuring your network interface, and connecting securely to another computer.</p>
    
    <h3>Step 1: Install SSH</h3>
    <p>First, ensure that the SSH server package is installed on your machine. Open a terminal and execute the following command:</p>
    <code>sudo apt-get update && sudo apt-get install openssh-server</code>
    <p>Once the installation is complete, you can start the SSH service with:</p>
    <code>sudo systemctl start ssh</code>
    <p>To ensure SSH starts automatically upon boot, use:</p>
    <code>sudo systemctl enable ssh</code>
    
    <h3>Step 2: Obtain Your Current IP Address</h3>
    <p>Before changing your IP address, you need to know your current one. Use the <code>ifconfig</code> command:</p>
    <code>ifconfig</code>
    <p>Look for your network interface (commonly <code>eth0</code> for Ethernet or <code>wlan0</code> for Wi-Fi) and note the current IP address and subnet mask (netmask).</p>
    
    <h3>Step 3: Change Your IP Address</h3>
    <p>To change your IP address, use the following format, replacing placeholders with your actual interface name, desired IP address, and subnet mask:</p>
    <code>sudo ifconfig interfaceName newIP netmask subnetMask</code>
    <p>For example, if your current IP address is <strong>172.23.23.32</strong> with a subnet mask of <strong>255.255.255.0</strong> and you want to change it to <strong>192.0.0.122</strong>, you would use:</p>
    <code>sudo ifconfig eth0 192.0.0.122 netmask 255.255.255.0</code>
    <p>Remember, changing IP addresses might affect your network connectivity. Ensure the new IP is in the same network range as defined by your router or network administrator unless you're setting up a separate, isolated network.</p>
    
    <h3>Step 4: Connect to Another Computer via SSH</h3>
    <p>To establish a secure connection to another computer, you need the target's IP address. Then, use the following command:</p>
    <code>ssh username@targetIPAddress</code>
    <p>Replace <strong>username</strong> with the user account you're connecting to and <strong>targetIPAddress</strong> with the computer's IP address. If it's the first time you're connecting to this machine, you'll be asked to verify the host's authenticity.</p>
    <p>Upon successful connection, you'll be prompted to enter the password for the specified user account on the target computer. After authentication, you'll have secure shell access to the remote machine.</p>
    
    <h3>Additional Tips</h3>
    <p>If you encounter permission issues or are unable to write to certain directories, ensure you have the necessary permissions. Using <code>sudo</code> grants you temporary root access, which is often required for network configuration changes.</p>
</section>

<section>
    <h2>Practical 9: Install firewalld, configure it - allow some ports. Change default ports of something. and display the change.</h2>
</section>




<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.3/js/bootstrap.bundle.min.js" integrity="sha512-7Pi/otdlbbCR+LnW+F7PwFcSDJOuUJB3OxtEHbg4vSMvzvJjde4Po1v4BR9Gdc9aXNUNFVUY+SK51wWT8WF0Gg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
</body>
</html>
